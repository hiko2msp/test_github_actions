name: test workflow_dispatch

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment name (a, b)
        required: true
        default: "a"
        options:
          - a
          - b
      target:
        type: choice
        description: Target project
        required: true
        options:
          - a_project
          - b_project

env:
  ENV: ${{ github.event.inputs.env }}
  TARGET: ${{ github.event.inputs.target }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      mapped_value: ${{ steps.set_values.outputs.mapped_value }}
      env: ${{ steps.set_values.outputs.env }}
      target: ${{ steps.set_target.outputs.target }}
      parent: ${{ steps.set_target.outputs.parent }}
    steps:
      - id: set_values
        run: |
          declare -A dict
          dict=(
            ["a"]="a_value"
            ["b"]="b_value"
          )
          echo "env=${{ env.ENV }}" >> "$GITHUB_OUTPUT"
          echo "mapped_value=${dict['${{ env.ENV }}']}" >> "$GITHUB_OUTPUT"
        shell: bash
      - id: set_target
        run: |
          echo "target=${{ env.TARGET }}" >> "$GITHUB_OUTPUT"
          if [[ "${{ env.TARGET }}" = "a_project" ]]; then
            echo "parent=a_parent" >> "$GITHUB_OUTPUT"
          elif [[ "${{ env.TARGET }}" = "b_project" ]]; then
            echo "parent=b_parent" >> "$GITHUB_OUTPUT"
          else
            echo "parent=other" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

  run:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - id: echo
        run: |
          echo "${{ needs.prepare.outputs.mapped_value }} ${{ needs.prepare.outputs.env }} ${{ needs.prepare.outputs.target }} ${{ needs.prepare.outputs.parent }}"

